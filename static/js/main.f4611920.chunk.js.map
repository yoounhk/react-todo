{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","edit","value","input","setInput","inputRef","useRef","useEffect","current","focus","className","onSubmit","e","preventDefault","id","Date","getUTCMilliseconds","text","placeholder","type","name","ref","onChange","target","Todo","todos","completeTodo","removeTodo","updateTodo","setEdit","map","todo","index","isComplete","onClick","TodoList","setTodos","console","log","prev","updatedTodos","removed","filter","x","todoId","newValue","item","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAgEeA,MA9Df,SAAkBC,GAAQ,IAAD,EAEGC,mBAASD,EAAME,KAAOF,EAAME,KAAKC,MAAQ,IAF5C,mBAEhBC,EAFgB,KAETC,EAFS,KAIjBC,EAAWC,iBAAO,MAiBxB,OAfAC,qBAAU,WACRF,EAASG,QAAQC,WAejB,mCACE,sBAAMC,UAAU,YACVC,SAdY,SAACC,GACrBA,EAAEC,iBAEFd,EAAMY,SAAS,CACbG,IAAI,IAAIC,MAAOC,qBACfC,KAAMd,IAGRC,EAAS,KAKP,SAEGL,EAAME,KACL,qCACE,uBACES,UAAU,kBACVQ,YAAY,mBACZC,KAAK,OACLjB,MAAOC,EACPiB,KAAK,OACLC,IAAKhB,EACLiB,SAAU,SAAAV,GAAC,OAAIR,EAASQ,EAAEW,OAAOrB,UACnC,wBACEQ,UAAU,mBACVS,KAAK,SAFP,uBAOF,qCACE,uBACET,UAAU,aACVQ,YAAY,kBACZC,KAAK,OACLjB,MAAOC,EACPiB,KAAK,OACLC,IAAKhB,EACLiB,SAAU,SAAAV,GAAC,OAAIR,EAASQ,EAAEW,OAAOrB,UACnC,wBACEQ,UAAU,cACVS,KAAK,SAFP,+B,cCfGK,MAjCf,YAA8D,IAA/CC,EAA8C,EAA9CA,MAAOC,EAAuC,EAAvCA,aAAcC,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,WAAa,EAEnC5B,mBAAS,CAC/Bc,GAAI,KACJZ,MAAO,KAJkD,mBAEpDD,EAFoD,KAE9C4B,EAF8C,KAe3D,OAAI5B,EAAKa,GACA,cAAC,EAAD,CAAUb,KAAMA,EAAMU,SATV,SAAAT,GACnB0B,EAAW3B,EAAKa,GAAIZ,GACpB2B,EAAQ,CACNf,GAAI,KACJZ,MAAO,QAQJuB,EAAMK,KAAI,SAACC,EAAMC,GAAP,OACd,qBACCtB,UAAWqB,EAAKE,WAAa,oBAAsB,WADpD,UAEC,qBAAKvB,UAAU,YAAYwB,QAAS,kBAAMR,EAAaK,EAAKjB,KAA5D,SACGiB,EAAKd,MAD8Dc,EAAKjB,IAG3E,sBAAKJ,UAAU,QAAf,UACE,cAAC,IAAD,CAAQA,UAAU,YAAYwB,QAAS,kBAAML,EAAQ,CAACf,GAAIiB,EAAKjB,GAAIZ,MAAO6B,EAAKd,UAC/E,cAAC,IAAD,CAAcP,UAAU,cAAcwB,QAAS,kBAAMP,EAAWI,EAAKjB,YANHkB,OCqB3DG,MA3Cf,WAAqB,IAAD,EAEQnC,mBAAS,IAFjB,mBAEXyB,EAFW,KAEJW,EAFI,KAkClB,OA9BA7B,qBAAU,WACR8B,QAAQC,IAAIb,KACX,CAACA,IA6BF,qCACE,uCACA,cAAC,EAAD,CAAUd,SA7BE,SAACoB,GACfK,GAAS,SAAAG,GAAI,OACVR,GADU,mBACDQ,UA4BV,cAAC,EAAD,CAAMd,MAAOA,EAAOC,aAdH,SAACZ,GACpB,IAAI0B,EAAef,EAAMK,KAAI,SAAAC,GAI3B,OAHIA,EAAKjB,KAAOA,IACdiB,EAAKE,YAAcF,EAAKE,YAEnBF,KAETK,EAASI,IAOyCb,WAxBjC,SAACb,GAClB,IAAM2B,EAAUhB,EAAMiB,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,KAAOA,KAE3CsB,EAASK,IAqBiEb,WAlBzD,SAACgB,EAAQC,GAC1BT,GAAS,SAAAG,GAAI,OAAIA,EAAKT,KAAI,SAAAgB,GAAI,OAAIA,EAAKhC,KAAO8B,EAASE,EAAK7B,KAAO4B,EAAWC,eCbnEC,MARf,WACE,OACE,qBAAKrC,UAAU,WAAf,SACI,cAAC,EAAD,OCHRsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f4611920.chunk.js","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\n\r\nfunction TodoForm(props) {\r\n\r\n  const [input, setInput] = useState(props.edit ? props.edit.value : '');\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    inputRef.current.focus();\r\n  });\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    props.onSubmit({\r\n      id: new Date().getUTCMilliseconds(),\r\n      text: input\r\n    })\r\n\r\n    setInput('');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"todo-form\"\r\n            onSubmit={submitHandler}>\r\n        {props.edit ? (\r\n          <>\r\n            <input\r\n              className=\"todo-input edit\"\r\n              placeholder=\"Update your item\"\r\n              type=\"text\"\r\n              value={input}\r\n              name=\"text\"\r\n              ref={inputRef}\r\n              onChange={e => setInput(e.target.value)}/>\r\n            <button\r\n              className=\"todo-button edit\"\r\n              type=\"submit\"\r\n            >Update\r\n            </button>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <input\r\n              className=\"todo-input\"\r\n              placeholder=\"Your to-do here\"\r\n              type=\"text\"\r\n              value={input}\r\n              name=\"text\"\r\n              ref={inputRef}\r\n              onChange={e => setInput(e.target.value)}/>\r\n            <button\r\n              className=\"todo-button\"\r\n              type=\"submit\"\r\n            >Add To-do\r\n            </button>\r\n          </>)}\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoForm;","import React, {useState} from 'react';\r\nimport {BiEdit} from \"react-icons/bi\";\r\nimport {AiFillDelete} from \"react-icons/ai\";\r\nimport TodoForm from \"./TodoForm\";\r\n\r\nfunction Todo({todos, completeTodo, removeTodo, updateTodo}) {\r\n\r\n  const [edit, setEdit] = useState({\r\n    id: null,\r\n    value: ''\r\n  });\r\n\r\n  const submitUpdate = value => {\r\n    updateTodo(edit.id, value);\r\n    setEdit({\r\n      id: null,\r\n      value: ''\r\n    });\r\n  }\r\n\r\n  if (edit.id) {\r\n    return <TodoForm edit={edit} onSubmit={submitUpdate} />\r\n  }\r\n\r\n  return todos.map((todo, index) =>\r\n    (<li\r\n      className={todo.isComplete ? \"todo-row complete\" : \"todo-row\"} key={index}>\r\n      <div className=\"todo-text\" onClick={() => completeTodo(todo.id)} key={todo.id}>\r\n        {todo.text}\r\n      </div>\r\n      <div className=\"icons\">\r\n        <BiEdit className=\"edit-icon\" onClick={() => setEdit({id: todo.id, value: todo.text})}/>\r\n        <AiFillDelete className=\"delete-icon\" onClick={() => removeTodo(todo.id)}/>\r\n      </div>\r\n    </li>)\r\n  );\r\n}\r\n\r\nexport default Todo;","import React, {useEffect, useState} from 'react';\r\nimport TodoForm from \"./TodoForm\";\r\nimport Todo from \"./Todo\";\r\n\r\nfunction TodoList() {\r\n\r\n  const [todos, setTodos] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(todos)\r\n  }, [todos]);\r\n\r\n  const addTodo = (todo) => {\r\n    setTodos(prev =>\r\n      [todo, ...prev]\r\n    );\r\n  };\r\n\r\n  const removeTodo = (id) => {\r\n    const removed = todos.filter(x => x.id !== id);\r\n\r\n    setTodos(removed);\r\n  };\r\n\r\n  const updateTodo = (todoId, newValue) => {\r\n    setTodos(prev => prev.map(item => item.id === todoId ? item.text = newValue : item ));\r\n  };\r\n\r\n  const completeTodo = (id) => {\r\n    let updatedTodos = todos.map(todo => {\r\n      if (todo.id === id) {\r\n        todo.isComplete = !todo.isComplete;\r\n      }\r\n      return todo;\r\n    })\r\n    setTodos(updatedTodos);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>To-do</h1>\r\n      <TodoForm onSubmit={addTodo} />\r\n      <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} updateTodo={updateTodo}/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default TodoList;","import './App.css';\nimport TodoList from \"./components/TodoList\";\nimport React from \"react\";\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n        <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}